--- 
- hosts: all 
  become: yes

  vars:
    db_user: ansibledb
    db_password: ansibleuser
    db_name: ansible

  tasks:
    - name: "Install packages"
      yum: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-server
        - python3
        - python3-pip
    
    - name: "Install Python packages"
      pip: "name={{ item }}  state=present"
      with_items:
        - psycopg2-binary   

    - name: "Find out if PostgreSQL is initialized"
      stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exist

    - name: Start and enable postgres services
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql
    
    - name: "Create database"
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Load SQL script into a variable"
      set_fact:
        sample_sql: "{{ lookup('file', 'conf/sample.sql') }}"

    - name: "Execute script from variable"
      command: "psql {{ db_name }} -c {{ sample_sql }}"
      become_user: postgres
      register: sql_response_variable

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted

